[2:57 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

По заготовке  моделей к БД

 

 

По стандарту принято при именовании класса таблицы в ед. числе писать, буквы "s" на конце надо будет убрать.

Code First Conventions - Соглашение по наименованию в Code First (работа с базой данных с помощью описывания классов в первую очередь, а потом создания таблиц на их основе)

 

https://metanit.com/sharp/entityframework/2.6.php

 

Далее первичный ключ желательно называть просто Id (EF автоматически будет понимать, что это первичный ключ), использовать полное наименовние (к примеру WeightSettingId) желательно только, когда это поле используется как внешний ключ в других таблицах с которыми есть связь.

 

Часто в рамках работы системы может понадобится удалять те или иные строки, но при этом исходя из практики нежелательно данные удалять в никуда, поэтому во всех таблицах добавляется поле IsDelete (bool), которое отвечает за то, что строка считается ли удалённой или нет. И производить так называемый SoftDelete при этом не удаляя строку из БД, а лишь присваивая значения IsDelete = true

 

Благодаря ООП есть возможность сократить для себя работу в описании моделей таблиц. 

Создать класс BaseTable в котором объявить свойства Id, IsDelete и чтобы все модели таблиц базы данных его наследовали. Тем самым ты себя убережёшь от постоянного прописывания полей таблицы, которые в 99% таблиц присутствуют.

 

 

 

Соглашения по наименованию в Code First | Entity Framework 6

[2:58 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

Как выглядит таблицы в реальной системе, думаю там будут избыточные для тебя поля, но их можно использовать как наполнитель в будущем для твоей БД. Если будут трудности с вставкой в свою БД, спросишь подумаем как сделать.

ControlWeighing.csv

ControlWeighingEvalationType.csv

ControlWeighingScheduleType.csv

ControlWeighingSettings.csv

ControlWeighingStatus.csv

Departments.csv

SupportService.csv

WeigthSetting.csv

[3:03 PM] Fedorov, Vladislav Y (NGTU)

то есть Remove вообще никогда не использовать, просто изменять флажок?

[3:04 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

Именно. 

Более того, ты можешь написать обёртку над стандартным DbContext в котором метод Remove переопределишь своим кодом, в котором просто будет менять флаг на IsDelete

[3:05 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

Что такое паттерны программирования знаешь ?

[3:06 PM] Fedorov, Vladislav Y (NGTU)

да, но только теоретически

[3:07 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

Вот теоретически ты можешь написать паттерн декоратор на dbContext либо применить паттерн репозиторий, чтобы решить эту задачу. Это просто на подумать\почитать в будущем

[3:10 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

Также помимо EF в системах используют альтернативы: linq2sql или dapper. Считается, что у них есть свои преимущества над стандартным ORM (EF) от микрософта. 

 

Не всегда достаточно сложные SQL запросы можно написать удачно на EF, поэтому чаша весов чаще к тем двум склоняется. Но это не в рамках нашего задания. Про них также можешь почитать в будущем.

[3:12 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

Инструкции по твоему модулю для ознакомления, в них же примерные скриншоты форм, как это выглядит в системе

 

https://wiki.kazzinc.kz/doku.php?id=%D0%BA%D0%B0%D0%B7%D1%86%D0%B8%D0%BD%D0%BA:%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B:mms:02:020501

 

 

https://wiki.kazzinc.kz/doku.php?id=%D0%BA%D0%B0%D0%B7%D1%86%D0%B8%D0%BD%D0%BA:%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B:mms:3.14_%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5_%D0%B2%D0%B7%D0%B2%D0%B5%D1%88%D0%B8%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5

 

 

https://wiki.kazzinc.kz/doku.php?id=%D0%BA%D0%B0%D0%B7%D1%86%D0%B8%D0%BD%D0%BA:%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D1%8B:mms:15%D1%81%D0%BF%D1%80:1501_%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0_%D0%B2%D0%B5%D1%81%D0%BE%D0%B2

[3:13 PM] Kuzmin, Andrey (Ust-Kamenogorsk - KZ)

На мой взгляд не нужно сильно зацикливаться на формах, достаточно будет сделать так, чтобы они просто выполняли свою задачу. Создавать\Редактировать\Удалять строки из таблиц.